<UserControl x:Class="NolekSymbols.View.BasicAnimationTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:model="clr-namespace:NolekSymbols.Model"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:viewModel="clr-namespace:NolekSymbols.ViewModel"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="MainLoaded" d:DataContext="{d:DesignData MainViewModel}">
    <DockPanel Height="auto" DataContext="{Binding Path=SelectedSymbol}">
        <StackPanel DockPanel.Dock="Bottom">

            <TextBlock FontSize="36">Select throughput model</TextBlock>
            <ComboBox
                ItemsSource="{
                                Binding Path=AvailableCombinationsOfShape, 
                                Mode=OneWay}"
                SelectedIndex="{Binding Path=DesiredThroughput, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                SelectionChanged="DesiredThroughput_OnSelectionChanged">

                <ComboBox.ItemTemplate>

                    <DataTemplate DataType="model:SymbolImageModel">
                        <ItemsControl ItemsSource="{Binding Path=Shapes}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Height="{Binding Path=ImageSize.Height}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Canvas>
                                        <Path Data="{Binding Path=Shape}" StrokeThickness="1" Stroke="Black">
                                            <Path.Fill>
                                                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0"
                                                                     EndPoint="0.05 0.05">
                                                    <GradientStop Offset="0.5" Color="{Binding Path=FillColor}" />
                                                    <GradientStop Offset="0.5" Color="Transparent" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                    </Canvas>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock>Tag:</TextBlock>
                <ComboBox ItemsSource="{StaticResource MockTags}" SelectedIndex="0" />
            </StackPanel>
            <TextBlock FontSize="36">Select colors based on state</TextBlock>

            <DataGrid ItemsSource="{Binding Path=Image.ColorConditions}"
                      AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="State" Binding="{Binding Path=Operator}" IsReadOnly="True" />
                    <DataGridTemplateColumn Header="Color" x:Name="ColorPickerColumnBoolTab">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="model:ColorDetermineModel">
                                <xctk:ColorPicker
                                    Width="100"
                                    SelectedColor="{
                                            Binding Path=Color, 
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=Explicit}"
                                    BorderThickness="0"
                                    SelectedColorChanged="ColorPickerChanged"
                                    StandardColors="{Binding RelativeSource={
                                            RelativeSource AncestorType={x:Type TabControl}},
                                            Path=DataContext.(viewModel:SymbolTabViewModel.StandardColors)}"
                                    DisplayColorAndName="True"
                                    ShowTabHeaders="False" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>

            </DataGrid>
        </StackPanel>
    </DockPanel>
</UserControl>