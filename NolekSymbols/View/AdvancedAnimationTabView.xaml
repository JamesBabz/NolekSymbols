<UserControl x:Class="NolekSymbols.View.AdvancedAnimationTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:model="clr-namespace:NolekSymbols.Model"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:viewModel="clr-namespace:NolekSymbols.ViewModel"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="MainLoaded">
    <DockPanel>
        <Button DockPanel.Dock="Bottom" Width="50" HorizontalAlignment="Left" Padding="5"
                Click="AddColorCondition_OnCLick">
            Tilføj
        </Button>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <TextBlock>Tag:</TextBlock>
            <ComboBox ItemsSource="{StaticResource MockTags}" SelectedIndex="0" />
        </StackPanel>
        <DataGrid ItemsSource="{Binding Path=SelectedSymbol.Image.ColorConditions}"
                  AutoGenerateColumns="False" d:DataContext="{d:DesignData MainViewModel}">
            <DataGrid.Columns>

                <!--TODO Add default to the value and handle the exception-->
                <DataGridTemplateColumn x:Name="Value1Column">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="model:ColorDetermineModel">
                            <TextBox Text="{Binding Path=StringValues[0]}"
                                     Visibility="{Binding Path=Operator, 
                                                Converter={StaticResource OperatorToVisibilityConverter},
                                            ConverterParameter=left}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn x:Name="OperatorComboBoxColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="model:ColorDetermineModel">
                            <ComboBox x:Name="OperatorComboBox" ItemsSource="{StaticResource Operators}"
                                      SelectedItem="{Binding Path=Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--TODO Handle this exception when there's only one value-->
                <DataGridTemplateColumn x:Name="Value2Column">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="model:ColorDetermineModel">
                            <TextBox
                                Text="{Binding Path=StringValues[1], Converter={StaticResource NullToEmptyStringConverter}}"
                                Visibility="{Binding Path=Operator, 
                                            Converter={StaticResource OperatorToVisibilityConverter},
                                            ConverterParameter=right}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn x:Name="ColorPickerColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="model:ColorDetermineModel">
                            <xctk:ColorPicker
                                Width="100"
                                SelectedColor="{
                                            Binding Path=Color, 
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=Explicit}"
                                BorderThickness="0"
                                SelectedColorChanged="ColorPickerChanged"
                                StandardColors="{Binding RelativeSource={
                                            RelativeSource AncestorType={x:Type TabControl}},
                                            Path=DataContext.(viewModel:SymbolTabViewModel.StandardColors)}"
                                DisplayColorAndName="True"
                                ShowTabHeaders="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn x:Name="ShapeCheckComboBoxColumn">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="model:ColorDetermineModel">
                            <xctk:CheckComboBox
                                Name="ComboBox"
                                ItemsSource="{Binding RelativeSource={
                                            RelativeSource AncestorType={x:Type TabControl}},
                                            Path=DataContext.(viewModel:SymbolTabViewModel.SelectedSymbol).Image.Shapes, Mode=OneWay}"
                                SelectedValue="{Binding Path=ShapesAsString}" />

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Padding="5" Click="RemoveColorCondition_OnClick">Fjern</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>